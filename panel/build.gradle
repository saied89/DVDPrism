apply plugin: 'kotlin2js'
apply plugin: 'kotlin-dce-js'
apply plugin: 'org.jetbrains.kotlin.frontend'

dependencies {
    def html_version = "0.6.12"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
    implementation 'org.jetbrains:kotlin-react:16.6.0-pre.70-kotlin-1.3.21'
    implementation 'org.jetbrains:kotlin-react-dom:16.6.0-pre.70-kotlin-1.3.21'
    implementation "org.jetbrains.kotlinx:kotlinx-html-js:$html_version"
    implementation "io.ktor:ktor-client-json-js:$ktor_version"
}

kotlinFrontend {
    downloadNodeJsVersion = "11.14.0"

    npm {
//        dependency("kotlin", "1.1.0")
        dependency "style-loader"
        dependency "core-js"
        dependency "react"
        dependency "react-dom"
        devDependency("karma")
    }

    webpackBundle {
        bundleName = "main"
        contentPath = file('src/main/web')
        mode = 'development'
//        mode = 'production'
    }

    define "PRODUCTION", false
    define "X", false

//    rollupBundle {
//        bundleName = "rolledUp"
//    }

//    allBundles {
//        /* set properties for all bundles */
//    }

//    bundle("someBundler") {
//        ....
//    }
}

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
    kotlinOptions.main = "call"
}

compileTestKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js-tests/${project.name}-tests.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
//    kotlinOptions.moduleName = project.name + "-test"
    kotlinOptions.main = "call"
}


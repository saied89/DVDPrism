plugins {
    id 'org.jetbrains.kotlin.jvm'
}
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'jacoco'

dependencies {
    def koin_version = '1.0.2'
    def logback_version = '1.2.3'
    def mongo_version = "3.9.1"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation project(':common')
    compile "org.litote.kmongo:kmongo:$mongo_version"

    testCompile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8" //for parsing sample jsons

    implementation 'org.jsoup:jsoup:1.11.3' // for parsing html

    //Î›rrow
    api "io.arrow-kt:arrow-core:$arrow_version"
    
    //ktor
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-auth:$ktor_version"
    compile "io.ktor:ktor-auth-jwt:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"
    testCompile "io.ktor:ktor-server-tests:$ktor_version"
    compile "io.ktor:ktor-client-json-jvm:$ktor_version"
    compile "io.ktor:ktor-client-logging-jvm:$ktor_version"
    testImplementation "io.ktor:ktor-client-mock-jvm:$ktor_version"
    compile "io.ktor:ktor-client-jackson:$ktor_version"
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    

    //// Koin
    // Koin for Kotlin
    implementation "org.koin:koin-core:$koin_version"
    compile "org.koin:koin-ktor:$koin_version"
    // Koin for Unit tests
    testImplementation "org.koin:koin-test:$koin_version"
    ////
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testImplementation "io.mockk:mockk:$mockK_version"
}


jar {
    manifest {
        attributes 'Main-Class': "com.saied.dvdprism.backend.MainKt"
    }
}

//Display test results in gradle log. 
test {
    useJUnitPlatform()
    
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

sourceCompatibility = "8"
targetCompatibility = "8"

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}